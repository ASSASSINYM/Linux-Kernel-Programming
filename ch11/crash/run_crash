#!/bin/bash
# run_crash
# ***************************************************************
# This program is part of the source code released for the book
#  "Linux Kernel Development Cookbook"
#  (c) Author: Kaiwan N Billimoria
#  Publisher:  Packt
#  GitHub repository:
#  https://github.com/PacktPublishing/Linux-Kernel-Development-Cookbook
# ****************************************************************
# Brief Description:
# A simple script to invoke crash in either 'live' system mode or in a
# non-interactive mode where it runs commands given in a file and writes
# them out to a 'report' file.
# NOTE: pl install the latest 'crash' package; from kernel ver 4.19, older
# versions of crash fail..
#
# For details, please refer the book, Ch 11.

name=$(basename $0)
CRASHBIN=~/kaiwanTECH/crash_git/crash  #crash
REP=report_crashinfo.txt

[ $# -ne 2 ] && {
  echo "Usage: ${name} option vmlinux-with-debug-symbolic-info
 (option) 0 : run crash 'normally', interactive session with /proc/kcore
 (option) 1 : run crash 'auto-mode', gather some info, write a report and exit"
  exit 1
}
OPT=$1
VMLINUX=$2

[ ! -f ${VMLINUX} ] && {
  echo "${name}: Required vmlinux with debug symbolic info (\"${VMLINUX}\") not found, aborting..."
  exit 1
}

if [ "${OPT}" = "0" ] ; then
  CMD="sudo ${CRASHBIN} /proc/kcore ${VMLINUX}"
elif [ "${OPT}" = "1" ] ; then
  CMD="sudo ${CRASHBIN} /proc/kcore ${VMLINUX} < crash_getinfo > ${REP}"
else
  echo "${name}: option ${OPT} invalid."
  exit 1
fi

echo "${CMD}"
[ "${OPT}" = "1" ] && echo " Gathering info, pl wait ..."
eval "${CMD}"
[ "${OPT}" = "1" ] && {
  ls -lh ${REP}
}
exit 0
